{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// export const fetchTransactions = async (month, search = '', page = 1, perPage = 10) => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/transactions`, {\n//       params: { month, search, page, perPage }\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching transactions:', error.message); // Log error message\n//     throw error;\n//   }\n// };\n\n// // Similar functions for other APIs\n\n// export const fetchBarChartData = async (month) => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/transactions/bar-chart`, {\n//       params: { month }\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching bar chart data:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchPieChartData = async (month) => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/transactions/pie-chart`, {\n//       params: { month }\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching pie chart data:', error);\n//     throw error;\n//   }\n// };\n// Fetch transactions with search and pagination\nexport const fetchTransactions = async (month, search = '', page = 1, perPage = 10) => {\n  try {\n    const response = await axios.get(`${port}/transactions`, {\n      params: {\n        month,\n        search,\n        page,\n        perPage\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching transactions:', error.message); // Log the error\n    throw error;\n  }\n};\n\n// Fetch statistics for a selected month\nexport const fetchStatistics = async month => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/statistics`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching statistics:', error.message); // Log the error\n    throw error;\n  }\n};\n\n// Fetch bar chart data for a selected month\nexport const fetchBarChartData = async month => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/barchart`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bar chart data:', error.message); // Log the error\n    throw error;\n  }\n};\n\n// Fetch pie chart data for a selected month\nexport const fetchPieChartData = async month => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/piechart`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching pie chart data:', error.message); // Log the error\n    throw error;\n  }\n};\n\n// Fetch combined data from all APIs\nexport const fetchAllData = async month => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/all`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching all data:', error.message); // Log the error\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchTransactions","month","search","page","perPage","response","get","port","params","data","error","console","message","fetchStatistics","fetchBarChartData","fetchPieChartData","fetchAllData"],"sources":["C:/Users/BOOPATHY E/Documents/stack coding/front-endtask/front-endtask/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// export const fetchTransactions = async (month, search = '', page = 1, perPage = 10) => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/transactions`, {\r\n//       params: { month, search, page, perPage }\r\n//     });\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error fetching transactions:', error.message); // Log error message\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Similar functions for other APIs\r\n\r\n// export const fetchBarChartData = async (month) => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/transactions/bar-chart`, {\r\n//       params: { month }\r\n//     });\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error fetching bar chart data:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const fetchPieChartData = async (month) => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/transactions/pie-chart`, {\r\n//       params: { month }\r\n//     });\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error fetching pie chart data:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n// Fetch transactions with search and pagination\r\nexport const fetchTransactions = async (month, search = '', page = 1, perPage = 10) => {\r\n  try {\r\n    const response = await axios.get(`${port}/transactions`, {\r\n      params: { month, search, page, perPage }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching transactions:', error.message);  // Log the error\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch statistics for a selected month\r\nexport const fetchStatistics = async (month) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/statistics`, {\r\n      params: { month }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching statistics:', error.message);  // Log the error\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch bar chart data for a selected month\r\nexport const fetchBarChartData = async (month) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/barchart`, {\r\n      params: { month }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching bar chart data:', error.message);  // Log the error\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch pie chart data for a selected month\r\nexport const fetchPieChartData = async (month) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/piechart`, {\r\n      params: { month }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching pie chart data:', error.message);  // Log the error\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch combined data from all APIs\r\nexport const fetchAllData = async (month) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/all`, {\r\n      params: { month }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching all data:', error.message);  // Log the error\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}