{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BOOPATHY E\\\\Documents\\\\stack coding\\\\front-endtask\\\\front-endtask\\\\src\\\\components\\\\BarChart.js\";\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// const BarChart = ({ data }) => {\n//   // Ensure data is not null or undefined\n//   if (!data) {\n//     return <div>No data available for the bar chart</div>;\n//   }\n\n//   const labels = Object.keys(data);\n//   const values = Object.values(data);\n\n//   // Validate data\n//   if (labels.length === 0 || values.length === 0) {\n//     return <div>No valid data available for the bar chart</div>;\n//   }\n\n//   const barChartData = {\n//     labels,\n//     datasets: [\n//       {\n//         label: 'Number of Items',\n//         data: values,\n//         backgroundColor: 'rgba(75, 192, 192, 0.6)',\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div>\n//       <h3>Price Range Bar Chart</h3>\n//       <Bar data={barChartData} />\n//     </div>\n//   );\n// };\n\n// export default BarChart;\n\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst BarChart = ({\n  data\n}) => {\n  // Ensure data is not null or undefined\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available for the bar chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Convert the priceRanges object into arrays for the chart\n  const priceRanges = Object.keys(data);\n  const values = Object.values(data);\n\n  // Validate data\n  if (priceRanges.length === 0 || values.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No valid data available for the bar chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  const barChartData = {\n    labels: priceRanges,\n    datasets: [{\n      label: 'Number of Items',\n      data: values,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Price Range Bar Chart - \", priceRanges[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","BarChart","data","children","fileName","_jsxFileName","lineNumber","columnNumber","priceRanges","Object","keys","values","length","barChartData","labels","datasets","label","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/BOOPATHY E/Documents/stack coding/front-endtask/front-endtask/src/components/BarChart.js"],"sourcesContent":["// import React from 'react';\r\n// import { Bar } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\n// const BarChart = ({ data }) => {\r\n//   // Ensure data is not null or undefined\r\n//   if (!data) {\r\n//     return <div>No data available for the bar chart</div>;\r\n//   }\r\n\r\n//   const labels = Object.keys(data);\r\n//   const values = Object.values(data);\r\n\r\n//   // Validate data\r\n//   if (labels.length === 0 || values.length === 0) {\r\n//     return <div>No valid data available for the bar chart</div>;\r\n//   }\r\n\r\n//   const barChartData = {\r\n//     labels,\r\n//     datasets: [\r\n//       {\r\n//         label: 'Number of Items',\r\n//         data: values,\r\n//         backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Price Range Bar Chart</h3>\r\n//       <Bar data={barChartData} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BarChart;\r\n\r\n\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst BarChart = ({ data }) => {\r\n  // Ensure data is not null or undefined\r\n  if (!data) {\r\n    return <div>No data available for the bar chart</div>;\r\n  }\r\n\r\n  // Convert the priceRanges object into arrays for the chart\r\n  const priceRanges = Object.keys(data);\r\n  const values = Object.values(data);\r\n\r\n  // Validate data\r\n  if (priceRanges.length === 0 || values.length === 0) {\r\n    return <div>No valid data available for the bar chart</div>;\r\n  }\r\n\r\n  const barChartData = {\r\n    labels: priceRanges,\r\n    datasets: [\r\n      {\r\n        label: 'Number of Items',\r\n        data: values,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Price Range Bar Chart - {priceRanges[0]}</h3>\r\n      <Bar data={barChartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5GR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B;EACA,IAAI,CAACA,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAI,QAAA,EAAK;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvD;;EAEA;EACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC;EACrC,MAAMS,MAAM,GAAGF,MAAM,CAACE,MAAM,CAACT,IAAI,CAAC;;EAElC;EACA,IAAIM,WAAW,CAACI,MAAM,KAAK,CAAC,IAAID,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACnD,oBAAOb,OAAA;MAAAI,QAAA,EAAK;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D;EAEA,MAAMM,YAAY,GAAG;IACnBC,MAAM,EAAEN,WAAW;IACnBO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBd,IAAI,EAAES,MAAM;MACZM,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACElB,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,GAAI,0BAAwB,EAACK,WAAW,CAAC,CAAC,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDR,OAAA,CAACV,GAAG;MAACa,IAAI,EAAEW;IAAa;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACW,EAAA,GAhCIjB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}